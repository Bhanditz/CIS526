#!/usr/bin/env python
import optparse

optparser = optparse.OptionParser()
optparser.add_option("-g", "--hyp", dest="hyp", help="Alignment to be graded")
optparser.add_option("-r", "--ref", dest="ref", help="Gold standard")
(opts, _) = optparser.parse_args()

ref = [set(l.strip().split()) for l in open(opts.ref).readlines()]
hyp = [set(l.strip().split()) for l in open(opts.hyp).readlines()]

tp = 0.0; nh = 0.0; nr = 0.0

for r,h in zip(ref, hyp) : 
	tp += len(r.intersection(h))
	nh += len(h)
	nr += len(r)
#	p = len(r.intersection(h)) / float(len(h))
#	c = len(r.intersection(h)) / float(len(r))
#	try : f = ( 2 * p * c ) / ( p + c )
#	except ZeroDivisionError : f = 0
#	print '%s\t%s\t%s\t%f\t%f\t%f'%(' '.join(list(r)), ' '.join(list(h)), ' '.join(list(r.intersection(h))), p, c, f) 

P = tp / nh
R = tp / nr

F = ( 2 * P * R ) / ( P + R )


print P, R, F
print 1 - F
